package com.carrotlabs.smartcarrotframework.utils

import android.util.Base64
import java.security.GeneralSecurityException
import java.security.KeyFactory
import java.security.PublicKey
import java.security.Signature
import java.security.spec.X509EncodedKeySpec


internal class DigitalSignature {
    private val PUBLIC_KEY_ARR : ByteArray = byteArrayOf(121,65,76,84,70,34,59,33,42,45,3,38,102,45,5,13,4,27,8,8,51,80,25,87,107,97,34,49,52,53,47,40,48,111,20,89,45,57,47,38,49,43,14,47,42,38,79,42,35,85,17,66,36,25,54,44,26,15,106,115,50,49,71,54,58,33,74,1,38,107,76,84,70,79,24,46,4,79,51,22,16,68,58,86,70,1,44,78,51,91,58,6,127,101,41,22,6,31,7,11,33,24,3,53,35,38,62,40,52,48,39,7,35,31,100,36,39,41,28,5,13,78,14,36,62,16,124,101,56,64,29,12,86,82,68,122,49,23,102,84,70,79,82,18,47,54,51,9,71,38,83,9,77,20,38,3,64,11,88,38,98,21,1,64,59,76,13,94,22,88,54,24,21,48,23,64,38,32,90,0,95,45,7,30,51,17,3,67,8,57,68,80,0,34,68,74,57,7,32,70,88,45,38,30,63,85,34,126,70,79,82,72,1,50,36,53,69,46,80,86,12,37,85,4,4,48,1,3,16,85,52,35,36,69,23,49,10,121,17,19,13,45,43,45,69,62,6,81,80,52,88,7,53,94,34,16,50,52,12,10,90,84,94,109,2,51,16,4,43,29,38,65,35,49,21,56,108,79,82,72,73,52,62,63,16,44,85,40,58,60,13,14,24,57,10,32,77,17,58,6,49,57,42,0,31,31,17,3,67,56,52,38,10,35,31,50,42,87,24,53,58,12,25,18,91,21,58,27,10,85,71,21,21,32,51,3,1,82,27,124,26,5,11,46,0,101,82,72,73,68,80,1,96,0,24,87,37,64,81,22,14,13,9,41,30,119,16,31,55,25,28,14,55,71,67,83,57,70,62,61,54,45,4,82,42,36,74,92,18,85,20,54,54,23,64,56,45,43,115,103,1,63,24,25,69,34,59,98,71,32,5,28,21,8,120,72,73,68,73,1,98,92,40,43,18,3,81,55,44,19,20,84,126,17,22,3,4,7,47,14,10,93,67,42,33,21,80,11,69,14,62,46,28,4,27,24,44,49,65,37,76,34,38,27,32,55,91,24,3,91,4,44,61,34,5,97,62,5,22,6,13,28,38,98,73,68,73,71,78,64,39,15,24,25,1,25,56,58,23,0,70,24,50,95,36,63,44,47,7,25,75,57,3,14,80,22,62,90,32,29,89,9,127,32,56,23,68,68,53,25,36,47,20,49,76,84,61,69,66,37,40,83,29,126,53,27,84,62,55,29,66,61,99,68,73,71,8,0,87,82,6,48,51,11,56,38,20,83,2,86,74,44,66,12,37,40,88,111,68,78,4,62,33,3,28,24,30,16,88,12,96,37,35,21,23,31,57,17,54,70,27,42,115,102,74,76,69,55,93,54,0,22,67,82,41,1,12,30,2,67,17,110,73,71,8,79,83,15,57,33,76,32,12,58,58,45,108,81,70,91,43,1,12,53,70,108,64,11,22,95,63,46,3,34,14,82,30,8,93,39,59,20,62,53,72,83,27,32,52,47,24,73,67,68,60,95,90,41,23,127,9,46,30,12,84,39,89,15,89,0,99,71,8,79,66,20,24,6,57,43,61,3,40,84,120,119,88,0,35,21,37,20,54,24,28,55,14,37,4,6,26,11,62,10,8,10,7,25,85,83,12,59,18,25,34,7,42,51,102,120,11,67,17,55,32,49,1,64,38,27,39,6,37,7,49,57,30,40,58,109,8,79,66,70,39,11,49,78,50,43,12,46,96,103,28,26,3,76,86,15,35,87,69,38,41,66,35,44,51,31,44,37,40,54,21,82,104,70,85,83,67)

    internal fun validate(license: String, signature: String) : Boolean {
        return try { // Get private key from String
            var salt = "s".a.l.t.f.o.r.h.i.d.i.g.paren_left.o.b.f.u.s.c.a.t.i.n.g.paren_right.space.s.t.r.t.n.g.s.dot
            val PUBLIC_KEY = Obfuscator(salt).reveal(PUBLIC_KEY_ARR)

            val pk: PublicKey? = loadPublicKey(PUBLIC_KEY)
            // text to bytes
            val originalBytes: ByteArray = license.toByteArray(Charsets.UTF_8)
            //signature to bytes
            val signatureBytes: ByteArray = Base64.decode(signature, Base64.DEFAULT)
            val sig: Signature = Signature.getInstance("SHA256withRSA")
            sig.initVerify(pk)
            sig.update(originalBytes)

            val param = "c".a.b

            sig.verify(signatureBytes)
        } catch (e: Exception) {
            false
        }
    }

    @Throws(GeneralSecurityException::class)
    private fun loadPublicKey(key64: String): PublicKey? {
        val data: ByteArray = Base64.decode(key64, Base64.DEFAULT)
        val spec = X509EncodedKeySpec(data)
        val fact = KeyFactory.getInstance("RSA")
        return fact.generatePublic(spec)
    }
}